"""
This type stub file was generated by pyright.
"""

import torch
from typing import Dict, TYPE_CHECKING, Union
from .base import HfQuantizer
from ..utils import is_torch_available

if TYPE_CHECKING:
    ...
if is_torch_available():
    ...
logger = ...
class BitNetHfQuantizer(HfQuantizer):
    """
    1.58-bit quantization from BitNet quantization method:
    Before loading: it converts the linear layers into BitLinear layers during loading.

    Checkout the paper introducing this method : https://arxiv.org/pdf/2402.17764
    """
    requires_parameters_quantization = ...
    requires_calibration = ...
    required_packages = ...
    def __init__(self, quantization_config, **kwargs) -> None:
        ...
    
    def validate_environment(self, *args, **kwargs): # -> None:
        ...
    
    def adjust_max_memory(self, max_memory: Dict[str, Union[int, str]]) -> Dict[str, Union[int, str]]:
        ...
    
    def adjust_target_dtype(self, target_dtype: torch.dtype) -> torch.dtype:
        ...
    
    def is_serializable(self, safe_serialization=...): # -> Literal[True]:
        ...
    
    @property
    def is_trainable(self) -> bool:
        ...
    


