"""
This type stub file was generated by pyright.
"""

from ..utils import is_torch_available

"HQQ (Half-Quadratic Quantization) integration file"
if is_torch_available():
    ...
logger = ...
def autoname_modules(model): # -> None:
    ...

def name_to_linear_tag(name): # -> LiteralString:
    ...

def get_linear_tags(model): # -> list[Any]:
    ...

def prepare_for_hqq_linear(model, quantization_config=..., modules_to_not_convert=..., has_been_replaced=...):
    """
    Prepares nn.Linear layers for HQQ quantization.
    Since each layer type can have separate quantization parameters, we need to do the following:
    1- tag each module with its neme via autoname_modules()
    2- Extract linear_tags (e.g. ['self_attn.q_proj', ...])
    3- Map quantization parameters as a dictionary linear_tag -> quant_params as HQQLinear exepects it, this is referred to as patch_params
    """
    ...

